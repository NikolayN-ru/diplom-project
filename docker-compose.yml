version: "3.8"

services:

  # myAmazon:
  #   image: scireum/s3-ninja:4
  #   ports:
  #     - "9444:80"
  #   volumes:
  #     - ./s3_1:/var/s3/data
  #   networks:
      # - docker-network

  redis:
    image: redis:2.8
    ports:
      - "6379:6379"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-api
    command: bash -c "python /app/manage.py migrate --noinput &&
             python /app/manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    # environment:
    #   - PORT=8000
    depends_on:
      - db
    # networks:
      # - docker-network

  frontend:
    build: ./frontend
    container_name: frontend-nextjs
    # command: npm run build && npm run start
    command: npm run dev
    restart: unless-stopped
    volumes:
      - './frontend:/app'
    ports:
      - "3070:3070" # хост\контейнер
    environment:
      - PORT=3000
      - PATH_CATEGORY=http://backend:8000/api/category
    # networks:
      # - docker-network
  
  db:
    hostname: db
    image: postgres:11
    container_name: postgres-db
    restart: unless-stopped
    volumes:
      # - /Users/nn/Desktop/try/1/datadb1:/var/lib/postgresql/data
      - ./datadb1:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    # networks:
      # - docker-network
  
  nginx:
    build: ./nginx
    container_name: NGINX_MAIN
    ports:
      - "80:80"
    volumes:
      # - static_data:/var/www/html/static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - backend
      - frontend
      - front-react
      - api-nodejs
    # networks:
      # - docker-network

  api-nodejs:
    build: ./back-nodejs
    container_name: nodejs-api
    command: npm run start
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - HOST=http://rwd.com
      - MONGO_URL=mongodb://db_mongo:27017/api
      - API_URL=http://auth:4001
    # volumes:
      # - ./back-nodejs./src:/app/src
    # depends_on:
      # - db_mongo
    # networks:
      # - docker-network

  # db_mongo:
  #   image: mongo:latest
  #   container_name: mongo_db
  #   volumes:
  #     - ./mongodb1:/data/db
  #     # - mongodb_api:/data/db
  #   networks:
  #     - docker-network

  front-react:
    build: ./front-react
    container_name: front-react
    command: serve -s build -l 3000
    # command: npm run start
    ports:
      - "3000:3000" # для достижения сервиса снаружи
    environment:
      - API_URL_DJANGO=http://backend:8000
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - ./front-react/src:/app/src
    # networks:
      # - docker-network


# networks:
#   docker-network:
#     driver: bridge

# volumes:
  # mongodb_api: