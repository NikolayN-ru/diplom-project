version: "3.8"

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: back-api
    command: gunicorn mainApp.wsgi:application --bind 0.0.0.0:8000
    # command: bash -c "python /app/manage.py migrate --noinput &&
            #  python /app/manage.py runserver 0.0.0.0:8000"
    # command: python /app/manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    # environment:
    #   - PORT=8000
    depends_on:
      - db
    networks:
      - lb-docker-network

  frontend:
    build: ./frontend
    container_name: frontend-nextjs
    # command: npm run build && npm run start
    command: npm run dev
    restart: unless-stopped
    volumes:
      - './frontend:/app'
      # - ./frontend/pages:/app/pages
      # - ./frontend/src:/app/src
      # - ./frontend/styles:/app/styles
    ports:
      - "3000:3000" # хост\контейнер
    environment:
      - PORT=3000
      - PATH_CATEGORY=http://backend:8000/api/category
    networks:
      - lb-docker-network
  
  db:
    hostname: db
    image: postgres:11
    container_name: postgres-db
    restart: unless-stopped
    volumes:
      # - /Users/nn/Desktop/try/1/datadb1:/var/lib/postgresql/data
      - ./datadb1:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    networks:
      - lb-docker-network

networks:
  lb-docker-network:
    driver: bridge

# volumes:
  # datadb1: